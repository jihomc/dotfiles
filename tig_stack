# Telegraf, InfluxDB, and Grafana Server (TIG) Stack



# InfluxDB - Installation

# Install packages and start InfluxDB service  
# https://portal.influxdata.com/downloads/
wget https://dl.influxdata.com/influxdb/releases/influxdb_1.7.9_amd64.deb
sudo dpkg -i influxdb_1.7.9_amd64.deb

sudo systemctl unmask influxdb.service
sudo systemctl start influxdb

# Command to view the default configuration
influxdb config

# InfluxDB local configuration file
/etc/influxdb/influxdb.conf

# Point the process to the configuration file
influxd -config /etc/influxdb/influxdb.conf



# InfluxDB - How to configure accounts and enable HTTP authentication
# https://docs.influxdata.com/influxdb/v1.7/administration/authentication_and_authorization/#authorization

# 1. Create admin account and telegraf user account in influxDB
influx
CREATE USER <username> WITH PASSWORD '<password>' WITH ALL PRIVILEGES
SHOW USERS
SHOW GRANTS for <user_name>

# 2. Enable HTTP authentication in the configuration file
[http]
	enabled = true
	auth-enabled = true
        bind-address = ":8086"

# 3. Configure HTTP Authentication for Telegraf (see urls in Telegraf config)

# Restart both processes
sudo systemctl restart influxdb
sudo systemctl restart telegraf

# Authenticate requests (CLI)
influx -username <username> -password <password> 



# Installation - Telegraf

# Install packages and enable Telegraf service
wget https://dl.influxdata.com/telegraf/releases/telegraf_1.10.3-1_amd64.deb
sudo dpkg -i telegraf_1.10.3-1_amd64.deb

sudo systemctl start telegraf
sudo systemctl enable telegraf

# Edit Telegraf config to authenticate requests to InfluxDB

vim /etc/telegraf/telegraf.conf
username = "telegraf-username"
password = "password"
urls = ["http://76.206.197.84:8086"]
urls = ["http://127.0.0.1:8086"]

# Check for errors when restarting telegraf service
$ sudo journalctl -f -u telegraf.service



# InfluxDB - How to enable HTTPS and connect Telegraf to InfluxDB

# Create self-signed certificates for InfluxDB
sudo openssl req -x509 -nodes -newkey rsa:2048 -keyout /etc/ssl/influxdb-selfsigned.key -out /etc/ssl/influxdb-selfsigned.crt -days 365

# Grant InfluxDB permissions on the certificate
sudo chown influxdb:influxdb /etc/ssl/influxdb-selfsigned.*

# Enable HTTPS in the configuration file
https-enabled = true
https-certificate = "/etc/ssl/influxdb-selfsigned.crt"
https-private-key = "/etc/ssl/influxdb-selfsigned.key"

# Restart the InfluxDB service
systemctl restart influxdb

# HTTPS Authentication - (localhost)
# Provides access to influx CLI
influx -ssl -unsafeSsl -host 127.0.0.1

# Connect Telegraf to InfluxDB via HTTPS
sudo vim /etc/telegraf/telegraf.conf
urls = ["https://<domain-name>.com:8086"]

# If using a self-signed certificate
insecure_skip_verify = true

# Restart Telegraf
systemctl restart telegraf



# Installation - Grafana-Server

# Update and install repository (for stable releases)
sudo apt-get install -y software-properties-common
sudo add-apt-repository "deb https://packages.grafana.com/oss/deb stable main"

# Add the gpg-key
wget -q -O - https://packages.grafana.com/gpg.key | sudo apt-key add -

# Update Apt repositories and install Grafana
sudo apt-get update
sudo apt-get install grafana

# Start the server
systemctl daemon-reload
systemctl start grafana-server
systemctl status grafana-server

# Enable the systemd service so Grafana starts at boot
sudo systemctl enable grafana-server.service



# How to enable HTTPS for Grafana

# Create self-signed certificates for Grafana
sudo openssl req -x509 -nodes -newkey rsa:2048 -keyout /etc/ssl/grafana-selfsigned.key -out /etc/ssl/grafana-selfsigned.crt -days 365

# Grant Grafana permissions on the certificate
sudo chown grafana:grafana /etc/ssl/grafana-self-signed.*

# Edit [server] protocol, certs & key file  in Grafana config
sudo vim /etc/grafana/grafana-server.ini

protocol = https
cert_file = /etc/ssl/grafana-selfsigned.crt
cert_key = /etc/ssl/grafana-selfsigned.key

# Grafana logs
sudo vim /var/log/grafana/grafana.log
sudo cat /var/log/grafana/grafana.log | grep eror | less



# How to set up an Nginx proxy server with Grafana to enable HTTPS
# With Nginx, no need to enable HTTPS directly in Grafana

# Install Nginx
sudo apt install curl gnupg2 ca-certificates lsb-release
echo "deb http://nginx.org/packages/ubuntu `lsb_release -cs` nginx" \
    | sudo tee /etc/apt/sources.list.d/nginx.list
curl -fsSL https://nginx.org/keys/nginx_signing.key | sudo apt-key add -
sudo apt-key fingerprint ABF5BD827BD9BF62
sudo apt update
sudo apt install nginx
sudo systemctl start nginx

# Nginx configuration files
sudo vim /etc/nginx/nginx.conf 
sudo vim /etc/nginx/sites-available/default
sudo vim /etc/nginx/site-enabled/default

# Create self-signed certificates for Nginx
sudo openssl req -x509 -nodes -newkey rsa:2048 -keyout /etc/ssl/nginx-selfsigned.key -out /etc/ssl/nginx-selfsigned.crt -days 365

# Grant Nginx permissions on the certificate
# Nginx user specified in nginx.conf
sudo chown "www-data":"www-data" /etc/ssl/nginx-selfsigned.* 

